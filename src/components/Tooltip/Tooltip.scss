@import '../../styles/_partials/index';

$arrowSize: 15px;
$arrowOffset: 14px;
$arrowSizeRotated: calculateRotatedSquaresLength($arrowSize, 45deg);
$transitionEaseIn: cubic-bezier(.2,.3,.25,.9);
$transitionDuration: 100ms;

@mixin tooltipBoxShadow {
	box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.14);
}

.Tooltip_Content {
	&:hover + .Tooltip_Popper,
	& + .Tooltip_Popper.Tooltip_Popper__DoPreventTransitionOut,
	& + .Tooltip_Popper.Tooltip_Popper__ForceHover {
		visibility: visible;

		& > .Tooltip_Popper_Inner {
			transform: scale(1.0) translateX(0%) translateY(0%) translateZ(0);
			transform-origin: 50% 50%;
		}
	}

	& + .Tooltip_Popper.Tooltip_Popper__IsTransitionLeaving {
		visibility: visible;
	}
}

.Tooltip_Popper {
	visibility: hidden;

	&[data-placement*='top'] {
		top: (-$arrowSizeRotated / 2 + $arrowOffset) !important;
	}

	&[data-placement*='right'] {
		left: ($arrowSizeRotated / 2 - $arrowOffset) !important;
	}

	&[data-placement*='bottom'] {
		top: ($arrowSizeRotated / 2 - $arrowOffset) !important;
	}

	&[data-placement*='left'] {
		left: (-$arrowSizeRotated / 2 + $arrowOffset) !important;
	}
}

.Tooltip_Popper_Inner {
	transition: transform $transitionDuration $transitionEaseIn, transform-origin $transitionDuration $transitionEaseIn;
	will-change: transform;

	@at-root .Tooltip_Popper:not(.Tooltip_Popper__DoPreventTransitionOut) & {
		transform: scale(0) translateX(0%) translateY(0%) translateZ(0);
	}

	&[data-placement*='top'] {
		transform-origin: 50% 100%;
	}

	&[data-placement*='right'] {
		transform-origin: 0 50%;
	}

	&[data-placement*='bottom'] {
		transform-origin: 50% 0;
	}

	&[data-placement*='left'] {
		transform-origin: 100% 50%;
	}
}

.Tooltip_Popper_Content {
	padding: 20px;
	font-weight: 300;
	text-align: center;
	@include theme-color-graydark50-else-gray25;
	@include theme-input-background-color;
	@include theme-input-border;
	@include tooltipBoxShadow;
}

.Tooltip_Popper_Arrow {
	$extraShadowArea: 100%;
	$borderThickness: 1px;

	position: absolute;
	width: $arrowSize;
	height: $arrowSize;
	@include theme-input-background-color;
	@include theme-input-border;
	border-radius: 0 0 4px 0;
	@include tooltipBoxShadow;
	pointer-events: none;
	// pre-rotate poly used to clip the content
	clip-path: polygon(
		(0% - $extraShadowArea) (100% + $extraShadowArea), // bottom-left (left after rotate)
		(100% + $extraShadowArea) (0% - $extraShadowArea), // top-right (right after rotate)
		(100% + $extraShadowArea) (100% + $extraShadowArea) // bottom-right (bottom after rotate)
	);

	&[data-placement^='top'] {
		bottom: $borderThickness; // overlay border
		left: calc(50% - #{$arrowSizeRotated / 2});
		transform-origin: 0 100%;
		transform: rotate(45deg);
	}

	&[data-placement^='right'] {
		left: -$arrowSize / 2 + $borderThickness;
		top: calc(50% - #{$arrowSizeRotated / 2});
		transform-origin: 49% 57%;
		transform: rotate(135deg);
	}

	&[data-placement^='bottom'] {
		top: -$arrowSize / 2 + $borderThickness;
		left: calc(50% - #{$arrowSizeRotated / 2});
		transform-origin: 60% 46%;
		transform: rotate(225deg);

		&[data-placement$='start'] {
			left: 13px;
		}

		&[data-placement$='end'] {
			left: calc(100% - #{$arrowSizeRotated} - 13px);
		}
	}

	&[data-placement^='left'] {
		right: -$arrowSize / 2 + $borderThickness;
		top: calc(50% - #{$arrowSizeRotated/ 2});
		transform-origin: 70% 63%;
		transform: rotate(-45deg);
	}

	&[data-placement^='top'][data-placement$='start'],
	&[data-placement^='bottom'][data-placement$='start'] {
		left: 13px;
	}

	&[data-placement^='top'][data-placement$='end'],
	&[data-placement^='bottom'][data-placement$='end'] {
		left: calc(100% - #{$arrowSizeRotated} - 13px);
	}

	&[data-placement^='right'][data-placement$='start'],
	&[data-placement^='left'][data-placement$='start'] {
		top: 13px;
	}

	&[data-placement^='right'][data-placement$='end'],
	&[data-placement^='left'][data-placement$='end'] {
		top: calc(100% - #{$arrowSizeRotated} - 13px);
	}
}
