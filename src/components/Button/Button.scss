@import '../../styles/_partials/index';
@import '../../common/styles/themeUtils';

$disabled-background-light: $gray25;
$disabled-background-dark: $gray;
$disabled-text-light: $gray75;
$disabled-text-dark: $gray-dark50;

.Button {
	// base styles
	position: relative;
	background: transparent;
	text-transform: uppercase;
	font-weight: 700;
	transition: transform 0.1s ease 0s, background-color 0.1s ease 0s, color 0.1s ease 0s;
	text-decoration: none;
	text-align: center;
	align-self: center;
	cursor: pointer;
	flex-shrink: 0;
	border-radius: 500px;
	@include defaultFontSettings;
	@include tracking(40);
	// setup a light and dark css variable for each css prop name so we can effortlessly toggle between them based on the current theme
	@include setupThemeVars(
		'--Button_MainColor',
		'--Button_Background',
		'--Button_BorderColor',
		'--Button_TextColor'
	);

	// css variable-based styles
	color: var(--Button_TextColor);
	background: var(--Button_Background);
	border: none;

	// conditionally draw inner border by using the :after selector
	&:after {
		content: '';
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		border: 2px solid var(--Button_BorderColor);
		border-radius: 500px;
	}

	&:active {
		transform: scale(.98);
	}

	&[disabled] {
		pointer-events: none;
	}

	// if default 'button' tag (otherwise don't impose display style)
	@at-root button#{&} {
		display: inline-block;
	}

	&.Button__Emphasis_Primary {
		@include setThemeVar('--Button_MainColor', $green);
		@include setThemeVar('--Button_Background', var(--Button_MainColor));
		@include setThemeVar('--Button_TextColor', $white);

		&:hover {
			@include setThemeVar('--Button_MainColor', $green-dark50);
		}

		&[disabled] {
			@include setThemeVar('--Button_MainColor', $disabled-background-light, $disabled-background-dark);
			@include setThemeVar('--Button_TextColor', $disabled-text-light, $disabled-text-dark);
		}
	}

	&.Button__Emphasis_Secondary {
		@include setThemeVar('--Button_MainColor', $gray75, $gray25);
		@include setThemeVar('--Button_BorderColor', var(--Button_MainColor));
		@include setThemeVar('--Button_TextColor', var(--Button_MainColor));

		&:hover {
			@include setThemeVar('--Button_Background', var(--Button_MainColor), transparent);
			@include setThemeVar('--Button_BorderColor', var(--Button_MainColor), $white);
			@include setThemeVar('--Button_TextColor', $white);
		}

		&[disabled] {
			@include setThemeVar('--Button_Background', var(--Button_MainColor));
			@include setThemeVar('--Button_MainColor', $disabled-background-light, $disabled-background-dark);
			@include setThemeVar('--Button_TextColor', $disabled-text-light, $disabled-text-dark);
		}
	}

	&.Button__Emphasis_Text {
		@include setThemeVar('--Button_MainColor', $green);
		@include setThemeVar('--Button_TextColor', var(--Button_MainColor));

		&:hover {
			@include setThemeVar('--Button_MainColor', $green-dark50);
		}

		&[disabled] {
			@include setThemeVar('--Button_TextColor', $disabled-background-light, $disabled-background-dark);
		}

		&.Button__Size_XSmall,
		&.Button__Size_Small {
			font-size: 11px;
		}
	}

	&.Button__Intent_Danger {
		@include setThemeVar('--Button_MainColor', $red);

		&:hover {
			@include setThemeVar('--Button_MainColor', $red-dark50);
		}
	}

	&.Button__Size_XSmall {
		padding: 3px 17px;
		font-size: 12px;
	}

	&.Button__Size_Small {
		padding: 5px 20px;
	}

	&.Button__Size_Medium {
		padding: 10px 20px;
	}

	&.Button__Size_Large {
		padding: 15px 30px;
	}
}
