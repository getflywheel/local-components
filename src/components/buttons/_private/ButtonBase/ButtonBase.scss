@import '../../../../styles/_partials/index';
@import '../../../../common/styles/themeUtils';

$disabled-background-light: $gray25;
$disabled-background-dark: $gray;
$disabled-text-light: $gray75;
$disabled-text-dark: $gray-dark50;

.ButtonBase {
	// base styles
	position: relative;
	background: transparent;
	text-transform: uppercase;
	font-weight: 700;
	transition: transform 0.1s ease 0s;
	text-decoration: none;
	text-align: center;
	align-self: center;
	cursor: pointer;
	flex-shrink: 0;
	border-radius: 500px;
	@include defaultFontSettings;
	@include tracking(40);
	// setup a light and dark css variable for each css prop name so we can effortlessly toggle between them based on the current theme
	@include setupThemeVars(
		'--Button_Background',
		'--Button_BorderColor',
		'--Button_TextColor',
		'--Button_SvgPathFillColor',
		'--Button_IfFill__Background',
		'--Button_IfFill__Background_Hover',
		'--Button_IfFill__TextColor',
		'--Button_IfFill__TextColor_Hover'
	);

	// css variable-based styles
	color: var(--Button_TextColor);
	background: var(--Button_Background);
	border: none;

	// conditionally draw inner border by using the :after selector
	&:after {
		content: '';
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		border: 2px solid var(--Button_BorderColor);
		border-radius: 500px;
	}

	&:active {
		transform: scale(.98);
	}

	&[disabled] {
		pointer-events: none;
	}

	// if default 'button' tag (otherwise don't impose display style)
	@at-root button#{&} {
		display: inline-block;
	}

	svg {
		width: 14px;
		height: 14px;
		vertical-align: middle;
		margin: 0 10px 0 0;

		path {
			transition: fill .1s ease 0s, stroke .1s ease 0s;
			fill: var(--Button_SvgPathFillColor);
		}
	}

	&.ButtonBase__Form_Fill {
		@include setThemeVar('--Button_Background', var(--Button_IfFill__Background));
		@include setThemeVar('--Button_TextColor', var(--Button_IfFill__TextColor));
		@include setThemeVar('--Button_SvgPathFillColor', $white);

		&:hover {
			@include setThemeVar('--Button_Background', var(--Button_IfFill__Background_Hover));
			@include setThemeVar('--Button_TextColor', var(--Button_IfFill__TextColor_Hover));
		}

		&[disabled] {
			@include setThemeVar('--Button_Background', $disabled-background-light, $disabled-background-dark);
			@include setThemeVar('--Button_TextColor', $disabled-text-light, $disabled-text-dark);
		}
	}

	&.ButtonBase__Form_Outline {
		@include setThemeVar('--Button_BorderColor', var(--Button_IfFill__Background));
		@include setThemeVar('--Button_TextColor', var(--Button_IfFill__Background));
		@include setThemeVar('--Button_SvgPathFillColor', var(--Button_IfFill__Background));

		&:hover {
			@include setThemeVar('--Button_TextColor', var(--Button_IfFill__TextColor_Hover));
			@include setThemeVar('--Button_Background', var(--Button_IfFill__Background_Hover), transparent);
			@include setThemeVar('--Button_BorderColor', var(--Button_IfFill__Background_Hover), var(--Button_IfFill__TextColor_Hover));
			@include setThemeVar('--Button_SvgPathFillColor', var(--Button_IfFill__TextColor));
		}

		&[disabled] {
			@include setThemeVar('--Button_Background', $disabled-background-light, $disabled-background-dark);
			@include setThemeVar('--Button_BorderColor', $disabled-background-light, $disabled-background-dark);
			@include setThemeVar('--Button_TextColor', $disabled-text-light, $disabled-text-dark);
		}
	}

	&.ButtonBase__Form_Text {
		@include setThemeVar('--Button_TextColor', var(--Button_IfFill__Background));
		@include setThemeVar('--Button_SvgPathFillColor', var(--Button_IfFill__Background));
		@include setThemeVar('--Button_TextColor_Hover', $green-dark50);

		&:hover {
			@include setThemeVar('--Button_TextColor', var(--Button_IfFill__Background_Hover));
		}

		&[disabled] {
			@include setThemeVar('--Button_TextColor', $disabled-background-light, $disabled-background-dark);
		}
	}

	&.ButtonBase__Color_Gray {
		@include setThemeVar('--Button_IfFill__Background', $gray75, $gray25);
		@include setThemeVar('--Button_IfFill__TextColor', $white);
		@include setThemeVar('--Button_IfFill__Background_Hover', $gray25, $gray75);
		@include setThemeVar('--Button_IfFill__TextColor_Hover', $white);
	}

	&.ButtonBase__Color_Green {
		@include setThemeVar('--Button_IfFill__Background', $green);
		@include setThemeVar('--Button_IfFill__TextColor', $white);
		@include setThemeVar('--Button_IfFill__Background_Hover', $green-dark50);
		@include setThemeVar('--Button_IfFill__TextColor_Hover', $white);
	}

	&.ButtonBase__Color_Orange {
		@include setThemeVar('--Button_IfFill__Background', $orange);
		@include setThemeVar('--Button_IfFill__TextColor', $white);
		@include setThemeVar('--Button_IfFill__Background_Hover', $orange-dark);
		@include setThemeVar('--Button_IfFill__TextColor_Hover', $white);
	}

	&.ButtonBase__Color_Red {
		@include setThemeVar('--Button_IfFill__Background', $red);
		@include setThemeVar('--Button_IfFill__TextColor', $white);
		@include setThemeVar('--Button_IfFill__Background_Hover', $red-dark50);
		@include setThemeVar('--Button_IfFill__TextColor_Hover', $white);
	}

	&.ButtonBase__FontSize_XSmall {
		font-size: 11px;
	}

	&.ButtonBase__FontSize_Small {
		font-size: 12px;
	}

	&.ButtonBase__FontSize_Medium {
		font-size: 14px;
	}

	&.ButtonBase__Padding_Small {
		padding: 5px 10px;
	}

	&.ButtonBase__Padding_Medium {
		padding: 10px 20px;
	}

	&.ButtonBase__Padding_Large {
		padding: 20px 30px;
	}
}
